app.controller('marksSubmissionController',
    function ($scope, $timeout, $http, $location, $filter, Notification) {
        $scope.bshimServerURL = "/bs";
        $scope.operation = 'Create';
        $scope.inactiveStatus = "Active";
        $scope.ButtonStatus = "Active";
        $scope.firstPage = true;
        $scope.lastPage = false;
        $scope.pageNo = 0;

        $scope.inactiveStatus = "Active";

        $scope.inactive = function () {
            if ($scope.clicked == false) {
                $scope.inactiveStatus = "InActive";
                $scope.ButtonStatus = "Active";
                var page = "Page";
            }
            else {
                $scope.inactiveStatus = "Active";
                $scope.ButtonStatus = "InActive";
                var page = "";
            }
            $scope.clicked = !$scope.clicked;
        };
        $scope.previoustopicDetails=[];

        $scope.editAS  = function(data) {
            $scope.term = parseInt(data.term);
            $scope.level =parseInt(data.level);
            $scope.levelClass(data.level);
            $scope.classId =parseInt(data.classId);
            $scope.classSubject(data.classId);
            $scope.subject =parseInt(data.subject);
            $scope.subjectChapter(data.subject);
            $scope.chapter = parseInt(data.chapter);
            $scope.component = parseInt(data.component);
            $scope.compSubComp($scope.component);
            $scope.subComponent=parseInt(data.subComponent);
            $scope.asId =parseInt(data.asId);
            $scope.studentsName=[];
            $scope.studentsName = angular.fromJson(data.studentsName);
            angular.forEach($scope.studentList, function (val, key) {
                if ($scope.studentsName.indexOf(val.studentName) != -1) {
                    val.value = true;
                    $scope.selectedStudents.push(val.studentName);
                } else {
                    val.value = false;
                }
            })
            $scope.topicList = data.mapValue;
            $scope.topicsList = data.mapValue;
            $scope.operation = 'Edit';
            $('#topic-title').text("Edit Topic");
            $("#add_new_AS_modal").modal('show');
        }, function (error) {
            Notification.error({
                message: 'Something went wrong, please try again',
                positionX: 'center',
                delay: 2000
            });
        };
        $scope.getPaginationList = function (page) {
            switch (page) {
                case 'firstPage':
                    $scope.firstPage = true;
                    $scope.lastPage = false;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    $scope.pageNo = 0;
                    break;
                case 'lastPage':
                    $scope.lastPage = true;
                    $scope.firstPage = false;
                    $scope.isNext = false;
                    $scope.isPrev = false;
                    $scope.pageNo = 0;
                    break;
                case 'nextPage':
                    $scope.isNext = true;
                    $scope.isPrev = false;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.pageNo = $scope.pageNo + 1;
                    break;
                case 'prevPage':
                    $scope.isPrev = true;
                    $scope.lastPage = false;
                    $scope.firstPage = false;
                    $scope.isNext = false;
                    $scope.pageNo = $scope.pageNo - 1;
                    break;
                default:
                    $scope.firstPage = true;
            }
            var paginationDetails;
            paginationDetails = {
                firstPage: $scope.firstPage,
                lastPage: $scope.lastPage,
                pageNo: $scope.pageNo,
                prevPage: $scope.prevPage,
                prevPage: $scope.isPrev,
                nextPage: $scope.isNext
            }
            if (angular.isUndefined($scope.searchText)) {
                $scope.searchText = "";
            }
            $http.post($scope.bshimServerURL + "/getSubComponentPagination?&type=" + $scope.inactiveStatus+ '&searchText=' + $scope.searchText, angular.toJson(paginationDetails)).then(function (response) {
                var data = response.data;
                console.log(data);
                var i = 0;
                $scope.subComponentList = data.list;
                $scope.first = data.firstPage;
                $scope.last = data.lastPage;
                $scope.prev = data.prevPage;
                $scope.next = data.nextPage;
                $scope.pageNo = data.pageNo;
                $scope.listStatus = true;
                // $scope.removeCountryDetails();

            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            })
        };
        $scope.getPaginationList();





        $scope.deleteAS = function (data) {
            bootbox.confirm({
                title: "Alert",
                message: "Do you want to Continue ?",
                buttons: {
                    confirm: {
                        label: 'OK'
                    },
                    cancel: {
                        label: 'Cancel'
                    }
                },
                callback: function (result) {
                    if(result == true){
                        var deleteDetails = {
                            asId:data.asId,
                            level:data.level,
                            classId:data.classId,
                            subject:data.subject,
                            chapter:data.chapter,
                            component:data.component,
                            studentsName:data.studentsName

                        };
                        $http.post($scope.bshimServerURL +"/deleteAS", angular.toJson(deleteDetails, "Create")).then(function (response, status, headers, config) {
                            var data = response.data;
                            $scope.getAssesmentSubList();
                            if(data==true){
                                Notification.success({
                                    message: 'Successfully Deleted',
                                    positionX: 'center',
                                    delay: 2000
                                });
                            }else {
                                Notification.warning({
                                    message: 'Cannot delete Already in Use',
                                    positionX: 'center',
                                    delay: 2000
                                });
                            }
                        }, function (error) {
                            Notification.warning({
                                message: 'Cannot be delete,already it is using',
                                positionX: 'center',
                                delay: 2000
                            });
                        });
                    }
                }
            });
        };

        $scope.addMarksSubmission = function () {
            $scope.ASSList=[];
            $scope.subComponentList=[];
            $(".loader").css("display", "block");
            $('#modelName').text("Add Marks Submission");
            $("#submit").text("Save");


            $("#add_new_marksSubmission_modal").modal('show');
        };

        $scope.getGradeList = function () {
            $http.post($scope.bshimServerURL + '/getGradeListNormal').then(function (response) {
                var data = response.data.object;
                $scope.gradeList = data;
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            });
        };
        $scope.getGradeList();
        $scope.levelClass = function(gradeId){
            var url = "/bs/getClassLevel?levelId=" + gradeId;
            $http.post(url).then(function (response) {
                var data = response.data;
                $scope.classList = angular.copy(data);
            })
        }
        $scope.classSubject = function(classId){
            if(classId==undefined){
                classId="";
            }
            var url = "/bs/getclassSubject?classId=" + classId;
            $http.post(url).then(function (response) {
                var data = response.data;
                $scope.subjectList = angular.copy(data);
                $scope.subjectss=[];
                angular.forEach($scope.subjectList,function (val,key) {
                    if(val.status=="Active"){
                        $scope.subjectss.push(val);
                    }

                })
            })
        }
        $scope.selectedquestion= [];
        $scope.selectQuestion = function (questionId) {
            var index = $scope.selectedquestion.indexOf(questionId);
            if (parseInt(index) >= 0) {
                $scope.selectedquestion.splice(index, 1);
            }else {
                $scope.selectedquestion.push(questionId);
            }
            $scope.assessmentId=$scope.selectedquestion;
        };
        var expandedq = false;
        $scope.showCheckboxesq=function() {
            var checkboxesq = document.getElementById("checkboxesq");
            if (!expandedq) {
                checkboxesq.style.display = "block";
                expandedq = true;
            } else {
                checkboxesq.style.display = "none";
                expandedq = false;
            }
        }
        $scope.topicQuestion = function(subId){
            $http.post($scope.bshimServerURL + '/getQuesBasedOnSubject?subjectId='+subId).then(function (response) {
                var data = response.data;
                $scope.questionList = data;

            })
        }
        $scope.multipleChoiceList = function(subId){
            $http.post($scope.bshimServerURL + '/getQuesAnswerList?questionId='+subId).then(function (response) {
                var data = response.data;
                $scope.quesAnswerList = data;

            })
        }
        $scope.getstd = function (quesList) {
            $http.post($scope.bshimServerURL + "/getstdListBasedOnClassAndLevel?level=" + $scope.level + "&class=" + $scope.classId).then(function (response) {
                var data = response.data;
                $scope.studentList = data;
                $scope.studentMap={};
                angular.forEach(quesList.question,function (val,key) {
                    angular.forEach($scope.studentList ,function (value,key) {
                        value.maxMarks = val.maxMarks;
                    })
                    $scope.studentMap[val.assessmentDetailsId]=angular.copy($scope.studentList);
                    $scope.quesAnsType=quesList.questionType;

                })
            });
        }
        $scope.saveAssessment = function (type) {
            $scope.map = {};
            angular.forEach($scope.studentMap, function (val, questionkey) {
                $scope.topicList = [];
                angular.forEach(val,function (value,key) {
                    var create = {};
                    create.marks = value.marks;
                    create.remarks = value.remarks;
                    create.studentName = value.studentName;
                    create.maxMarks = value.maxMarks;
                    $scope.topicList.push(create);
                    $scope.map[questionkey] = $scope.topicList;
                })
            });

            var saveDetails;
            saveDetails = {
                asId: $scope.asId,
                employee: $scope.teacher,
                mapValue: $scope.map,
                level: $scope.level,
                subject: $scope.subject,
                classId: $scope.classId,
                questionName:$scope.assessmentDetailsId,
                studentsName: angular.toJson($scope.questionsListId)
            };
            $http.post($scope.bshimServerURL + '/saveAssLessonPlan', angular.toJson(saveDetails)).then(function (response) {
                var data = response.data;
                if (data == "") {
                    Notification.error({message: 'Already exists', positionX: 'center', delay: 2000});
                }
                else {
                    $("#add_new_detail_modal").modal('hide');
                    if (!angular.isUndefined(data) && data !== null) {
                        $scope.searchText = "";
                    }
                    Notification.success({
                        message: ' Created  successfully',
                        positionX: 'center',
                        delay: 2000
                    });
                }
            }, function (error) {
                Notification.error({
                    message: 'Something went wrong, please try again',
                    positionX: 'center',
                    delay: 2000
                });
            });
        }
    });